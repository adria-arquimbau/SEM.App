@page "/login"

@using System.Net
@using Microsoft.AspNetCore.Components
@using SEM.App.Authentication

@inject HttpClient httpClient
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<div class="row">
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
        <div class="mb-3 text-center">
            <h3>LOGIN</h3>
        </div>
        <div class="mb-3">
            <label>Email</label>
            <input @bind="loginRequest.Email" class="form-control" placeholder="Email" />
        </div>
        <div class="mb-3">
            <label>Password</label>
            <input @bind="loginRequest.Password" type="password" class="form-control" placeholder="Password" />
        </div>
        @if (!requestingLogIn)
        {
            <button @onclick="Authenticate" class="btn btn-primary">Login</button>
        }
        else
        {
            <button class="btn btn-success" type="button" disabled>
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                <span class="sr-only">Signing up...</span>
            </button>
        }
        
    </div>
</div>

@code {
    private LoginRequest loginRequest = new();
    private const string semApiUrl = "https://sport-management-api.azurewebsites.net/api/";

    private bool requestingLogIn;

    private async Task Authenticate()
    {
        requestingLogIn = true;
        var loginResponse = await httpClient.PostAsJsonAsync<LoginRequest>(semApiUrl + "Auth/Login", loginRequest);

        if (loginResponse.IsSuccessStatusCode)
        {
            var userSession = await loginResponse.Content.ReadFromJsonAsync<UserSession>();
            var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(userSession);
            navManager.NavigateTo("/", true);
        }
        else if (loginResponse.StatusCode == HttpStatusCode.Unauthorized)
        {
            //ALERT
            return;
        }
        requestingLogIn = false;
    }

    public class LoginRequest
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }
}

