@page "/events"
@using SEM.App.Data
@using SEM.App.Utilities

@inject EventsService EventsService
@inject ILocalStorage LocalStorage
@inject NavigationManager Navigation

<PageTitle>Events</PageTitle>
 
<div class="events-page">
    <h1>Events</h1> 

    @if (sportEvents == null)
    { 
        <div class="loading-page">
            <div class="spinner-border loading-spinner" role="status"></div>
            <p>Loading... Please wait</p>
        </div>
    }
    else
    {
        @foreach (var sportEvent in sportEvents)
        {
            <div class="event">
                <div class="event-content">
                    <div class="event-field">
                        <h2><b>Title: </b> @sportEvent.Name</h2>
                    </div>
                    <div class="event-field">
                        <b>Creation date: </b> @sportEvent?.CreationDate
                    </div>
                    <div class="event-field">
                        <b>Created by: </b>  @sportEvent.CreatorNickName
                    </div>
                    <div class="event-field">
                        <button class="btn btn-primary" @onclick="() => GoToEvent(sportEvent.Id)">
                            Go to event
                        </button>
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    [CascadingParameter]
    public MainLayout mainLayout { get; set; }
    
    private List<SportEvent> sportEvents;
    private string Token { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Token = await LocalStorage.GetStringAsync("token");
        sportEvents = await EventsService.GetEvents();
    }

    private void GoToEvent(Guid eventId)
    {
        Navigation.NavigateTo($"/Event/{eventId}");
    }
}
