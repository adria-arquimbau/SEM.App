@using System.Net.Http.Headers
@using SEM.App.Authentication
@using SEM.App.Data
@using SEM.App.Components.Loadings
@using SEM.App.Data.Models

@inject HttpClient HttpClient
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager Navigation

<div class="lastNews">
    <h3 class="lastNews-title">Last news</h3>
    <div class="lastNews-container">
        @if (News != null)
        {
            @foreach (var news in News)
            {
                <div class="lastNew" @onclick="() => GoToTheNews(news.EventId)">
                    <div class="lastNew-top">
                        <div>
                            @news.Title
                        </div>
                        <div class="lastNew-date">
                            @news.CreationDate.ToLongDateString()
                        </div>
                    </div>
                    <div class="lastNew-field">
                        @news.ShortDescription
                    </div>
                    <div class="lastNew-footer">
                        <div class="lastNew-field">
                            Author: @news.AuthorName
                        </div>
                        <div class="lastNew-click">
                            Click and go to news!
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <SimpleLoading></SimpleLoading>
        }
    </div>
    @if (ErrorMessage != null)
    {
        <div class="alert alert-warning" role="alert">
            @ErrorMessage
        </div>
    }
</div>

@code {
    private List<GetNewsDto>? News;
    private string? ErrorMessage;
    private static readonly string semApiUrl = ApiService.GetBaseApiCallUrl();

    protected override async Task OnInitializedAsync()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authenticationStateProvider;
        var token = await customAuthStateProvider.GetToken();
        var request = new HttpRequestMessage(HttpMethod.Get, semApiUrl +  $"News");
        request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", token);
        var response = await HttpClient.SendAsync(request);
        
        if (response.IsSuccessStatusCode)
        {
            News = await response.Content.ReadFromJsonAsync<List<GetNewsDto>>();
        }
        if (!response.IsSuccessStatusCode)
        {
            ErrorMessage = Messages.ApiInternalServerErrorMessage;
        }
    }
    
    private void GoToTheNews(Guid eventId)
    {   
        Navigation.NavigateTo($"/Event/{eventId}");
    }
}
