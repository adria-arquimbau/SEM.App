@using SEM.App.Data
@using Event = SEM.App.Pages.Event

<div class="event-menu">
    <div>
        <h4>@Event?.Name</h4>
    </div>
    <div>
        <button class="@InformationButtonStyle" @onclick="() => ShowMenu(Pages.Event.MenuSection.Information)">Information</button>
        <button class="@RegistrationsButtonStyle" @onclick="() => ShowMenu(Pages.Event.MenuSection.Registrations)">Registrations</button>
        <button class="@RegistrationsButtonStyle" @onclick="() => ShowMenu(Pages.Event.MenuSection.Schedule)">Schedule</button>
        <button class="@NewsButtonStyle" @onclick="() => ShowMenu(Pages.Event.MenuSection.News)">News</button>
        <button class="@CompetitionButtonStyle" @onclick="() => ShowMenu(Pages.Event.MenuSection.Competition)">Competition</button>
    </div>
</div>


@code {
    [Parameter]
    public SportEvent? Event { get; set; }
    [Parameter]
    public EventCallback<Event.MenuSection> ShowMenuCallBack { get; set; }

    private string OutlineButton = "btn btn-outline-dark btn-sm";
    private string SelectedButton = "btn btn-dark btn-sm";
    
    private string InformationButtonStyle = "btn btn-outline-dark btn-sm";
    private string RegistrationsButtonStyle = "btn btn-outline-dark btn-sm";
    private string NewsButtonStyle = "btn btn-outline-dark btn-sm";
    private string CompetitionButtonStyle = "btn btn-outline-dark btn-sm";
    private string ScheduleButtonStyle = "btn btn-outline-dark btn-sm";

    private Task ShowMenu(Event.MenuSection section)
    {
        if (section == Pages.Event.MenuSection.Information)
        {
            SetALlButtonsOutline();
            InformationButtonStyle = SelectedButton;
        }
        if (section == Pages.Event.MenuSection.Registrations)
        {
            SetALlButtonsOutline();
            RegistrationsButtonStyle = SelectedButton;
        }
        if (section == Pages.Event.MenuSection.Schedule)
        {
            SetALlButtonsOutline();
            ScheduleButtonStyle = SelectedButton;
        }
        if (section == Pages.Event.MenuSection.News)
        {
            SetALlButtonsOutline();
            NewsButtonStyle = SelectedButton;
        }
        if (section == Pages.Event.MenuSection.Competition)
        {
            SetALlButtonsOutline();
            CompetitionButtonStyle = SelectedButton;
        }
        return ShowMenuCallBack.InvokeAsync(section);
    }

    private void SetALlButtonsOutline()
    {
        InformationButtonStyle = OutlineButton;
        NewsButtonStyle = OutlineButton;
        CompetitionButtonStyle = OutlineButton;
        ScheduleButtonStyle = OutlineButton;
        RegistrationsButtonStyle = OutlineButton;
    }
}
    