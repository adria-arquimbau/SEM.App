@page "/News/{NewsId:guid}"

@using SEM.App.Data.Models
@using SEM.App.Components.Loadings

@inject NavigationManager Navigation
@inject HttpClient HttpClient

@if (CurrentNews != null)
{
    <div class="news-page">
        <div class="news">
            <div class="news-top">
                <div>
                    <h1>@CurrentNews.Title</h1>
                </div>
                <div class="news-top-date-author">
                    <div>
                        @CurrentNews.CreationDate.ToShortDateString(), @CurrentNews.CreationDate.ToShortTimeString()
                    </div>
                    <div>
                        @CurrentNews.AuthorName
                    </div>
                </div>
            </div>
            <div class="news-body">
                @CurrentNews.Description
            </div>
            <div class="news-footer">
                <button type="button" class="btn btn-outline-dark btn-sm" @onclick="BackToMainPage">Go back</button>
                <button type="button" class="btn btn-outline-dark btn-sm" @onclick="GoToEvent">Go to event</button>
            </div>
        </div>
    </div>
    
}
else
{
    <SimpleLoading></SimpleLoading>
}

@code {
    [Parameter] 
    public Guid? NewsId { get; set; }    
    
    private GetNewsDto? CurrentNews { get; set; }    
        
    protected override async Task OnInitializedAsync()
    {   
        var response = await HttpClient.GetAsync("https://sport-management-api.azurewebsites.net/api/" + $"News/{NewsId}");
        if (!response.IsSuccessStatusCode)
        {   
            BackToMainPage();
        }
        CurrentNews =  await response.Content.ReadFromJsonAsync<GetNewsDto>();
        
        await base.OnInitializedAsync();
    }
    
    private void BackToMainPage()
    {
        Navigation.NavigateTo($"/");
    }

    private void GoToEvent()    
    {
        Navigation.NavigateTo($"/Event/{CurrentNews.EventId}");
    }

}   