@using SportEventManager.Data

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Event?.Name</h5>
            </div>
            <div class="modal-body">
                <p>@Event?.Description</p>
                <li>
                    Created: @Event?.CreationDate by @Event?.CreatorNickName
                </li>
            </div>
            <div class="modal-footer">
                @if (IsLoggedIn)
                {
                    <button type="button" class="btn btn-danger">Sign up (Not available)</button>
                }
                else
                {
                    <NavLink class="nav-link" href="account">
                        <button type="button" class="btn btn-danger">Log In to Sign Up</button>
                    </NavLink>
                }
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => Close()">Close</button>
            </div>
        </div>
    </div>
</div>


@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {
    private SportEvent? Event;
    private bool IsLoggedIn;
    public Guid Guid = Guid.NewGuid();
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    public void Open(SportEvent sportEvent, bool isLoggedIn)
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
        Event = sportEvent;
        IsLoggedIn = isLoggedIn;
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }
}